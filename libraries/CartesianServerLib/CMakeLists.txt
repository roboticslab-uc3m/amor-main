# Generated by "yarp cmake" & Juan G Victores 2012

cmake_minimum_required(VERSION 2.6)

IF (ENABLE_CartesianServerLib)

set(KEYWORD "CartesianServerLib")

# Find YARP.  Point the YARP_DIR environment variable at your build.
find_package(YARP REQUIRED)

# Search for source code.
file(GLOB folder_source *.cpp *.cc *.c)
file(GLOB folder_header *.h)
source_group("Source Files" FILES ${folder_source})
source_group("Header Files" FILES ${folder_header})

# Automatically add include directories if needed.
foreach(header_file ${folder_header})
  get_filename_component(p ${header_file} PATH)
  include_directories(${p})
endforeach(header_file ${folder_header})

# Include any directories needed for YARP and ASIBOT
include_directories(${YARP_INCLUDE_DIRS} ${AMOR_INCLUDE_DIRS})

# Set up our library.
if (folder_source)
  add_library(${KEYWORD} ${folder_source} ${folder_header})
  target_link_libraries(${KEYWORD} ${YARP_LIBRARIES})
  install(TARGETS ${KEYWORD} DESTINATION lib)
else (folder_source)
  message(FATAL_ERROR "No source code files found. Please add something")
endif (folder_source)

# Exporting dependencies for ASIBOTConfig.cmake quite manually for now... 
set(AMOR_MAIN_INCLUDE_DIRS ${AMOR_MAIN_INCLUDE_DIRS} ${CMAKE_CURRENT_SOURCE_DIR} CACHE INTERNAL "appended header dirs")
set(AMOR_MAIN_LIBRARIES ${AMOR_MAIN_LIBRARIES} ${KEYWORD} CACHE INTERNAL "appended libraries") 

ENDIF (ENABLE_CartesianServerLib)
